/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avroformats;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Intern extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Intern\",\"namespace\":\"avroformats\",\"fields\":[{\"name\":\"ID\",\"type\":\"int\"},{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"City\",\"type\":\"string\"},{\"name\":\"Company\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int ID;
  @Deprecated public java.lang.CharSequence Name;
  @Deprecated public java.lang.CharSequence City;
  @Deprecated public java.lang.CharSequence Company;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public Intern() {}

  /**
   * All-args constructor.
   */
  public Intern(java.lang.Integer ID, java.lang.CharSequence Name, java.lang.CharSequence City, java.lang.CharSequence Company) {
    this.ID = ID;
    this.Name = Name;
    this.City = City;
    this.Company = Company;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return Name;
    case 2: return City;
    case 3: return Company;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.Integer)value$; break;
    case 1: Name = (java.lang.CharSequence)value$; break;
    case 2: City = (java.lang.CharSequence)value$; break;
    case 3: Company = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   */
  public java.lang.Integer getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.Integer value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'Name' field.
   */
  public java.lang.CharSequence getName() {
    return Name;
  }

  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'City' field.
   */
  public java.lang.CharSequence getCity() {
    return City;
  }

  /**
   * Sets the value of the 'City' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.City = value;
  }

  /**
   * Gets the value of the 'Company' field.
   */
  public java.lang.CharSequence getCompany() {
    return Company;
  }

  /**
   * Sets the value of the 'Company' field.
   * @param value the value to set.
   */
  public void setCompany(java.lang.CharSequence value) {
    this.Company = value;
  }

  /** Creates a new Intern RecordBuilder */
  public static avroformats.Intern.Builder newBuilder() {
    return new avroformats.Intern.Builder();
  }
  
  /** Creates a new Intern RecordBuilder by copying an existing Builder */
  public static avroformats.Intern.Builder newBuilder(avroformats.Intern.Builder other) {
    return new avroformats.Intern.Builder(other);
  }
  
  /** Creates a new Intern RecordBuilder by copying an existing Intern instance */
  public static avroformats.Intern.Builder newBuilder(avroformats.Intern other) {
    return new avroformats.Intern.Builder(other);
  }
  
  /**
   * RecordBuilder for Intern instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Intern>
    implements org.apache.avro.data.RecordBuilder<Intern> {

    private int ID;
    private java.lang.CharSequence Name;
    private java.lang.CharSequence City;
    private java.lang.CharSequence Company;

    /** Creates a new Builder */
    private Builder() {
      super(avroformats.Intern.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avroformats.Intern.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.City)) {
        this.City = data().deepCopy(fields()[2].schema(), other.City);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Company)) {
        this.Company = data().deepCopy(fields()[3].schema(), other.Company);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Intern instance */
    private Builder(avroformats.Intern other) {
            super(avroformats.Intern.SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.City)) {
        this.City = data().deepCopy(fields()[2].schema(), other.City);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Company)) {
        this.Company = data().deepCopy(fields()[3].schema(), other.Company);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'ID' field */
    public java.lang.Integer getID() {
      return ID;
    }
    
    /** Sets the value of the 'ID' field */
    public avroformats.Intern.Builder setID(int value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ID' field has been set */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ID' field */
    public avroformats.Intern.Builder clearID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'Name' field */
    public java.lang.CharSequence getName() {
      return Name;
    }
    
    /** Sets the value of the 'Name' field */
    public avroformats.Intern.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'Name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'Name' field */
    public avroformats.Intern.Builder clearName() {
      Name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'City' field */
    public java.lang.CharSequence getCity() {
      return City;
    }
    
    /** Sets the value of the 'City' field */
    public avroformats.Intern.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.City = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'City' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'City' field */
    public avroformats.Intern.Builder clearCity() {
      City = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Company' field */
    public java.lang.CharSequence getCompany() {
      return Company;
    }
    
    /** Sets the value of the 'Company' field */
    public avroformats.Intern.Builder setCompany(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Company = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Company' field has been set */
    public boolean hasCompany() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Company' field */
    public avroformats.Intern.Builder clearCompany() {
      Company = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Intern build() {
      try {
        Intern record = new Intern();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.Integer) defaultValue(fields()[0]);
        record.Name = fieldSetFlags()[1] ? this.Name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.City = fieldSetFlags()[2] ? this.City : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Company = fieldSetFlags()[3] ? this.Company : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
